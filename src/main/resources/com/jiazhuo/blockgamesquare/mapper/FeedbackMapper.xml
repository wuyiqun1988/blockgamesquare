<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jiazhuo.blockgamesquare.mapper.FeedbackMapper" >
  <resultMap id="BaseResultMap" type="com.jiazhuo.blockgamesquare.domain.Feedback" >
    <id column="fid" property="fid" />
    <result column="UID" property="UID" />
    <result column="createTime" property="createTime" />
    <result column="content" property="content" />
    <result column="contact" property="contact" />
    <association property="userBasic" javaType="userBasic" columnPrefix="u_">
      <id column="UID" property="UID"/>
      <result column="nickName" property="nickName"/>
      <result column="phoneNumber" property="phoneNumber"/>
    </association>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from feedback
    where fid = #{fid}
  </delete>
  <insert id="insert" parameterType="com.jiazhuo.blockgamesquare.domain.Feedback" useGeneratedKeys="true" keyProperty="fid" >
    insert into feedback (UID, createTime, content, contact)
    values (#{UID}, #{createTime}, #{content}, #{contact})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.jiazhuo.blockgamesquare.domain.Feedback" >
    update feedback
    set UID = #{UID},
      createTime = #{createTime},
      content = #{content},
      contact = #{contact}
    where fid = #{fid}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select fid, UID, createTime, content, contact
    from feedback
    where fid = #{fid}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select fid, UID, createTime, content, contact
    from feedback
  </select>
  <select id="queryCount" resultType="int">
    select count(fid) from feedback f
    join userbasic u on f.UID = u.UID
    <include refid="baseWhere"/>
  </select>
  <select id="queryList" resultMap="BaseResultMap">
    select f.fid, f.UID, f.createTime, f.content, f.contact,
    u.UID u_UID, u.nickName u_nickName, u.phoneNumber u_phoneNumber
    from feedback f join userbasic u on f.UID = u.UID
    <include refid="baseWhere"/>
    limit #{start}, #{pageSize}
  </select>
  <sql id="baseWhere">
    <where>
      <if test="keyword != null ">
        and (
        phoneNumber like concat('%', #{keyword}, '%')
        or nickName like concat('%', #{keyword}, '%')
        )
      </if>
    </where>
  </sql>
</mapper>